"""
Лабораторная работа №1:
Программа, которая читая символы из бесконечной последовательности (эмулируется конечным файлом, читающимся поблочно),
распознает, преобразует и выводит на экран числа по определенному правилу. Числа распознаются по законам грамматики
русского языка. Преобразование делать по возможности через словарь. Для упрощения под выводом числа прописью
подразумевается последовательный вывод всех цифр числа. Регулярные выражения использовать нельзя.

Вариант №16:
Четные двоичные числа, не превышающие 8192, в которых встречается не более одной серии из трех подряд идущих нуля.
Выводит на экран цифры числа, исключая нули. Отдельно выводится прописью номер позиции, с которой начинается эта серия.
"""

# ниже словарь для вывода прописью номера позиции с которой начинается серия нулей
dictionary = {1: "Первый", 2: "Второй", 3: "Третий", 4: "Четвёртый", 5: "Пятый",
               6: "Шестой", 7: "Седьмой", 8: "Восьмой", 9: "Девятый", 10: "Десятый",
              11: "Одиннадцатый", 12: "Двенадцатый"}

# ниже список для распознания слов или чисел по законам грамматики великого и могучего
stop_list = [' ', '.', ",", '!', "?", ':', ';', '\n']

memory = ""  # условная "оперативная память" для обработки текущего слова или числа

with open("text.txt", "r") as file:  # открываем файл
    buffer = file.read(1)  # читаем
    while buffer:  # пока файл не кончился
        while buffer not in stop_list:  # проверка на: stop_list
            memory += buffer  # сбрасываем прочитанный символ в "оперативная память"
            break
        else:  # блок инструкция для полученного слова или числа
            for i in range(len(memory)):  # проверка на: двоичное число
                if memory[i] == "1" or memory[i] == "0":

                    #  ниже проверка и обработка двоичного числа
                    x = memory
                    print("Обнаружено число:", x)
                    if x[-1] == str(0):  # проверка на: чётность
                        if int(str(x), base = 2) <= 8192:  # проверка на: число не превышает 8192

                            start = -1  # параметр для определения индекса вхождения серии нулей в число (курсив)
                            count = 0  # счетчик для отображения количества вхождений серии нулей

                            while True:  # цикл для выявления количества вхождений серии нулей в число

                                start = x.find("000", start + 1)
                                if start == -1:
                                    break
                                start += 2
                                count += 1

                            if count == 0:  # если серия нулей не найдена
                                print("Серия нулей не найдена")

                            elif count == 1:  # если найдена 1 серия нулей

                                j = x.find('000') + 1  # вычисление ключа для словаря
                                print("Номер позиции с которой начинается серия нулей:",dictionary[j])  # вывод прописью номера позиции с которой
                                                                                                        # начинается серия нулей через словарь
                                x = x.replace("0", "")  # исключение нулей
                                print("Запись числа без нулей:", x)  # вывод цифр числа исключая нули

                            else:  # если найдено более 1 серии нулей
                                print("Количество вхождений серии нулей в число больше 1")

                        else:  # если число больше 8192
                            print("Число больше 8192")

                    else:  # если число нечётное
                        print("Число нечётное")

                    memory = ''  # очищение "оперативная память" для новой итерации
                    break
                else:
                    memory = ''  # очищение "оперативная память" для новой итерации
                    break
        buffer = file.read(1)